[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project]
name = "rich_argparse"
version = "0.7.0"
description = "A rich help formatter for argparse"
authors = [
  {name="Ali Hamdan", email="ali.hamdan.dev@gmail.com"},
]
readme = "README.md"
license = "MIT"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
keywords = ["argparse", "rich", "help-formatter"]
dependencies = [
  "rich >= 11.0.0",
]
requires-python = ">=3.7"

[project.urls]
Homepage = "https://github.com/hamdanal/rich-argparse"
Documentation = "https://github.com/hamdanal/rich-argparse#rich-argparse"
Issue-Tracker = "https://github.com/hamdanal/rich-argparse/issues"
Changelog = "https://github.com/hamdanal/rich-argparse/blob/main/CHANGELOG.md"

[tool.hatch.build]
sources = ["stubs"]
include = [
  "rich_argparse-stubs",
  "rich_argparse.py",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37,py38,py39,py310,py311,py312
skip_missing_interpreters = true

[testenv]
deps =
  pytest
  coverage[toml]
  covdefaults
commands =
  coverage run -m pytest {posargs}
  coverage report
  coverage html
"""

[tool.black]
target_version = ["py37"]
line_length = 100

[tool.isort]
py_version = 37
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.7"
strict = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = ["tests.*"]
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pyright]
pythonVersion = "3.7"
stubPath = "stubs"
include = ["rich_argparse.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["rich_argparse", "tests"]

[tool.coverage.report]
ignore_errors = true
fail_under = 100
